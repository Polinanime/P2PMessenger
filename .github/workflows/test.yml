name: Tests

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

env:
  GO_VERSION: "1.22"
  # COVERAGE_THRESHOLD: 70

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Go Module Cache
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run unit tests
        run: go test -v -race ./internal/...

      # - name: Generate coverage report
      #   run: go test -coverprofile=coverage.out ./internal/...

      # - name: Check coverage threshold
      #   run: |
      #     COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
      #     if (( $(echo "$COVERAGE < ${{ env.COVERAGE_THRESHOLD }}" | bc -l) )); then
      #       echo "Test coverage $COVERAGE% is below threshold ${{ env.COVERAGE_THRESHOLD }}%"
      #       exit 1
      #     fi

      # - name: Upload coverage report
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: coverage-report
      #     path: coverage.out

  integration:
    name: Integration Tests
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run integration tests
        run: go test -v ./integration/...

  build:
    name: Build
    needs: [test, integration]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build
        run: go build -v ./cmd/p2pmessenger

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: p2pmessenger
          path: p2pmessenger

  # docker:
  #   name: Docker Build
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Build Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: build/docker/Dockerfile
  #         push: false
  #         tags: p2pmessenger:latest

  notify:
    name: Notify
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check build status
        if: needs.build.result == 'failure' || needs.docker.result == 'failure'
        run: exit 1
